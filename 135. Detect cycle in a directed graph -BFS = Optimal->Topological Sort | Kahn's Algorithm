class Solution {
        public boolean isCyclic(int V, ArrayList<ArrayList<Integer>> adj) {
            int intdegree[] = new int[V];
            for(int i=0;i<V;i++){
                for(int it:adj.get(i)){
                intdegree[it]++;
                }
            }
            Queue<Integer> q= new LinkedList<Integer>();
            for(int i=0;i<V;i++){
                if(intdegree[i]==0){
                    q.add(i);
                }
            }
            int cnt=0;
            while(!q.isEmpty()){
                int node = q.peek();
                q.remove();
                cnt++;
                for(int it:adj.get(node)){
                    intdegree[it]--;
                    if(intdegree[it]==0) q.add(it);
                }
            }
            if(cnt==V) return false;
            return true;
        }
}
