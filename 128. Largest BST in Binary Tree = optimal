class NodeValue{
    public int maxNode, minNode, maxSize;
    NodeValue(int maxNode, int minNode, int maxSize){
        this.maxNode=maxNode;
        this.minNode=minNode;
        this.maxSize=maxSize;
    }
};
public class Solution {
    private static NodeValue largestBSThelp(TreeNode root){
        if(root==null){
            return new NodeValue(Integer.MAX_VALUE, Integer.MIN_VALUE, 0);
        }
        NodeValue left = largestBSThelp(root.left);
        NodeValue right = largestBSThelp(root.right);

        if(left.maxNode<root.data && root.data<right.minNode){
            return new NodeValue(Math.min(root.data,left.minNode), Math.max(root.data,right.maxNode),left.maxSize + right.maxSize+1);
        }
        return new NodeValue(Integer.MIN_VALUE, Integer.MAX_VALUE, Math.max(left.maxSize,right.maxSize));
    }
    public static int largestBST(TreeNode root) {
        return largestBSThelp(root).maxSize;
    }
}
