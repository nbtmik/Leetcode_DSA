class Solution 
{ 
    //Function to return max value that can be put in knapsack of capacity W.
    static int knapSack(int W, int wt[], int val[], int n) 
    { 
        int dp[][] = new int[n][W+1];
        
        for(int i=wt[0];i<=W;i++){
            dp[0][i] = val[0];
        }
        for(int ind=1;ind<n;ind++){
            for(int cur=0;cur<=W;cur++){
                int notTaken = dp[ind-1][cur];
                int taken = Integer.MIN_VALUE;
                if(wt[ind]<=cur){
                    taken = val[ind] + dp[ind-1][cur-wt[ind]];
                }
                dp[ind][cur] = Math.max(notTaken,taken);
            }
        }
        return dp[n-1][W];
    }
}
