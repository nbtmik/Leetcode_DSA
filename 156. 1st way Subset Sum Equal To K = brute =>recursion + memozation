// import java.util.* ;
// import java.io.*; 
// public class Solution {
//     private static boolean subsetSum(int n , int k , int arr[], int dp[][]){
//         if(k==0) return true;
//         if(n==0) return arr[0]==k;
//         if(dp[n][k] !=-1) return dp[n][k]==0 ? false:true;
//         boolean notTaken = subsetSum(n-1,k,arr,dp);
//         boolean Taken = false;
//         if(arr[n]<=k)
//         Taken = subsetSum(n-1,k-arr[n],arr,dp);
//         dp[n][k] =notTaken || Taken ? 1:0;
//         return notTaken || Taken;
//     }
//     public static boolean subsetSumToK(int n, int k, int arr[]){
//         int dp[][] = new int[n][k+1];
//         for(int rows[]:dp){
//             Arrays.fill(rows,-1);
//         }
//         return subsetSum(n-1,k,arr,dp);
//     }
// }
