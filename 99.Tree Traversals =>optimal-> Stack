import java.util.ArrayList;
import java.util.List;
import java.util.Stack;
class Pair {
    TreeNode node;
    int num;
    Pair(TreeNode _node, int _num) {
        num = _num;
        node = _node;
    }
}
public class Solution {
    public static List<List<Integer>> getTreeTraversal(TreeNode root) {
        Stack<Pair> st = new Stack<Pair>();
        st.push(new Pair(root,1));
        List<Integer> pre = new ArrayList<>();
        List<Integer> in = new ArrayList<>();
        List<Integer> post = new ArrayList<>();
        if(root==null) return ;
        while(!st.isEmpty()){
            Pair it = st.pop();
            if(it.num==1){
                pre.add(it.node.data);
                it.num++;
                st.push(it);
                if(it.node.left!=null){
                    st.push(new Pair(it.node.left,1));
                }
            }
            else if(it.num==2){
                in.add(it.node.data);
                it.num++;
                if(it.node.right != null){
                    st.push(new Pair(it.node.right,2));
                }
            }else{
                post.add(it.node.data);
            }
        } 

    }
}
