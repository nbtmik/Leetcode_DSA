class meetingComparator implements Comparator<meeting>
{
    @Override
    public int compare(meeting o1, meeting o2) 
    {
        if (o1.end < o2.end)
            return -1;
        else if (o1.end > o2.end)
            return 1;
        else if(o1.pos < o2.pos)
            return -1;
        return 1; 
    }
}

class Solution 
{
    //Function to find the maximum number of meetings that can
    //be performed in a meeting room.
    public static int maxMeetings(int start[], int end[], int n)
    {
        ArrayList<meeting> meet = new ArrayList<>();
        for(int i=0;i<start.length;i++)
           meet.add(new meeting(start[i],end[i],i+1));
           
        meetingComparator mc = new meetingComparator();
        collections.sort(meet,mc);
        ArrayList<Integer> answer = new ArrayList<>();
        answer.add(meet.get(0).pos);
        int limit = meet.get(0).end;
        for(int i=1;i<start.length;i++){
            if(meet.get(i).start>limit){
                limit = meet.get(i).end;
                answer= add(meet.get(i).pos);
            }
        }
        System.out.println("The meetings");
        for(int i=0;i<answer.size();i++){
            System.out.println(answer.get(i)+" ");
        }
    }
}
