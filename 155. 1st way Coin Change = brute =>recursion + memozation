class Solution {
    private long counthelp(int coins[],int ind , int T ,long dp[][]){
        if(ind==0){
            if(T%coins[0]==0) return 1;
            else return 0;
        }
        if(dp[ind][T]!=-1) return dp[ind][T];
        long notTaken = counthelp(coins, ind-1,T,dp);
        long Taken = 0;
        if(coins[ind]<=T)
        Taken = counthelp(coins,ind,T-coins[ind],dp);
        return dp[ind][T] = Taken + notTaken;
    } 
    public long count(int coins[], int N, int sum) {
        long dp[][] = new long[N][sum+1];
        for(long row[]:dp) Arrays.fill(row,-1);
        return counthelp(coins,N-1,sum,dp);
    }
}
