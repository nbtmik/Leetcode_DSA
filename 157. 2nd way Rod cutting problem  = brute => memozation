public class Solution {
	public static int f(int ind , int N, int price[], int dp[][]){
		if(ind==0){
			return (N* price[0]);
		}
		if(dp[ind][N] !=-1) return dp[ind][N];
		int notTaken = f(ind-1,N,price,dp);
		int Taken = Integer.MIN_VALUE;
		int rodlen = ind + 1;
		if(rodlen<=N) {
			Taken = price[ind] + f(ind,N-rodlen,price,dp);
		}
		return dp[ind][N] = Math.max(Taken, notTaken);
	}
	public static int cutRod(int price[], int n) {
		int dp[][] = new int[n][n+1];
		for(int row[]:dp){
			Arrays.fill(row, -1);
		}
		return f(n-1,n,price,dp);
	}
}
