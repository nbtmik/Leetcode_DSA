class solve {
    // Function to determine if graph can be coloured with at most M colours
    // such
    // that no two adjacent vertices of graph are coloured with same colour.
    public boolean graphColoring(boolean graph[][], int m, int n) {
        int col[] = new int[n];
        return solve(graph,col,0,m);
    }
    boolean solve(boolean graph[][], int col[],int node,int m){
        if(node==graph.length) return true;
        for(int i=1;i<=m;i++){
            if(check(graph,col,node,i)){
                col[node]=i;
                if(solve(graph,col,node+1,m)) return true;
                else col[node]=0;
            }
        }
        return false;
    }
    boolean check(boolean graph[][],int col[],int node, int color){
        for(int i=0;i<graph.length;i++){
            if(graph[node][i]==true && col[i]==color){
                return false;
            }
        }
        return true;
    }
}
